@model IEnumerable<MvcBankingApplication.Models.ViewModels.StaffTransactionModel>

@{
  ViewData["Title"] = "Staff Transactions";
}

<div class="py-5 bg-dark">
  <div class="container">
    <div class="d-flex justify-content-center">
      <form class="text-white my-4">
        <div class="form-group">
          <label for="transaction-id" class="mb-2">Transaction id</label>
          <div class="d-flex">
            <input placeholder="Enter key" type="number" name="key" class="form-control" id="transaction-id"
              value="@ViewData["key"]">
            <button class="btn btn-blue">search</button>
          </div>
        </div>
        <div class="row my-3">
          <div class="col">
            <div class="form-outline">
              <label class="form-label" for="minAmount">Min amount</label>
              <input value="@ViewData["minAmount"]" type="text" name="minAmount" id="minAmount" class="form-control" />
            </div>
          </div>
          <div class="col text-white">
            <div class="form-outline">
              <label class="form-label" for="maxAmount">Max amount</label>
              <input value="@ViewData["maxAmount"]" type="text" name="maxAmount" id="maxAmount" class="form-control" />
            </div>
          </div>
        </div>
        <div class="row my-2 mb-3">
          <div class="col">
            <div class="form-outline">
              <label class="form-label" for="accountCredited">Account Credited</label>
              <input value="@ViewData["accountCredited"]" type="number" name="accountCredited" id="accountCredited"
                class="form-control" />
            </div>
          </div>
          <div class="col text-white">
            <div class="form-outline">
              <label class="form-label" for="accountDebited">Account Debited</label>
              <input value="@ViewData["accountDebited"]" type="number" name="accountDebited" id="accountDebited"
                class="form-control" />
            </div>
          </div>
        </div>
        <div class="form-group">
          <label for="approverId" class="mb-2">Approver</label>
          <input value="@ViewData["approverId"]" placeholder="Approver id" type="text" name="approverId"
            class="form-control" id="approverId">
        </div>
        <div class="form-group mt-3">
          <div class="d-flex">
            <p class="text-uppercase me-5">Transaction type</p>
            <div class="form-group me-3">
              <input @ViewData["cr"] type="checkbox" name="cr" id="credit">
              <label for="credit">Credit</label>
            </div>
            <div class="form-group me-3">
              <input @ViewData["dr"] type="checkbox" name="dr" id="debit">
              <label for="debit">Debit</label>
            </div>
            <div class="form-group me-3">
              <input @ViewData["wire_t"] type="checkbox" name="wire_t" id="wire-transfer">
              <label for="wire-transfer">Wire transfer</label>
            </div>
            <div class="form-group">
              <input @ViewData["over_d"] type="checkbox" name="over_d" id="overdraft">
              <label for="overdraft">Overdraft</label>
            </div>
          </div>
        </div>
        <div class="form-group mt-3">
          <button class="btn-blue w-100">search</button>
        </div>
      </form>
    </div>

    <div class="overflow-auto">
      @if (Model.Count() == 0)
      {
        <h3 class="text-lighter text-white">There are no transactions to display</h3>
      }
      else
      {
        <table class="table table-dark">
          <thead>
            <tr>
              <th scope="col" class="text-capitalize">id</th>
              <th scope="col" class="text-capitalize">date</th>
              <th scope="col" class="text-capitalize">amount</th>
              <th scope="col" class="text-capitalize">type</th>
              <th scope="col" class="text-capitalize">A/C credited</th>
              <th scope="col" class="text-capitalize">A/C debited</th>
              <th scope="col" class="text-capitalize">approved by</th>
            </tr>
          </thead>
          <tbody id="transactionsContainer">
            @foreach (var transaction in Model)
            {
              var approvedBy = transaction.ApprovedBy ?? "N/A";
              var typeClass = "text-green";
              var typeTitle = "debit";
              if (transaction.TransactionTypeStr == "CR")
              {
                typeClass = "text-red";
                typeTitle = "credit";
              }
              else if (transaction.TransactionTypeStr == "OVER_D")
              {
                typeClass = "text-info";
                typeTitle = "overdraft";
              }
              else if (transaction.TransactionTypeStr == "WIRE_T")
              {
                typeClass = "text-white";
                typeTitle = "wire transfer";
              }
              <tr>
                <td>
                  @Html.DisplayFor(m => transaction.Id)
                </td>
                <td>@transaction.Date</td>
                <td>@transaction.Amount</td>
                <td class="@typeClass fw-bold" title="@typeTitle">@transaction.TransactionTypeStr</td>
                <td>@transaction.AccountCreditedId</td>
                <td>@transaction.AccountDebitedId</td>
                <td>@approvedBy</td>
              </tr>
            }
          </tbody>
        </table>
        <div aria-label="transaction pagination py-4">
          <div class="paginate mt-3">
            <button id="prevBtn" class="mb-2 btn-pagination btn site-link wrapper me-3">previous</button>
            <button id="nextBtn" class="mb-2 btn-pagination btn site-link wrapper">next</button>
          </div>
        </div>
      }
    </div>
  </div>
</div>
</div>

@section Scripts{
<partial name="_FetchStaffTransactions" />
}
